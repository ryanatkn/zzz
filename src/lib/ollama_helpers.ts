import {z} from 'zod';
import type {Svg_Data} from '@ryanatkn/fuz/Svg.svelte.js';

export const OLLAMA_URL = 'http://127.0.0.1:11434'; // TODO config

// Defining these Ollama schemas gives us better error messages and checks,
// and there are currently some mistakes in its types.
// They use `looseObject` to allow additional properties and
// are generally used for DEV-only parsing checks, with the parsed result discarded.

// TODO @many assert type: StatusResponse
export const Ollama_Status_Response = z.looseObject({
	status: z.string(),
});
export type Ollama_Status_Response = z.infer<typeof Ollama_Status_Response>;

// TODO @many assert type: ProgressResponse
export const Ollama_Progress_Response = z.looseObject({
	status: z.string(),
	digest: z.string().optional(),
	total: z.number().optional(),
	completed: z.number().optional(),
});
export type Ollama_Progress_Response = z.infer<typeof Ollama_Progress_Response>;

// TODO @many assert type: ModelDetails
export const Ollama_Model_Details = z.looseObject({
	families: z.array(z.string()),
	family: z.string(),
	format: z.string(),
	parameter_size: z.string(),
	parent_model: z.string(),
	quantization_level: z.string(),
});
export type Ollama_Model_Details = z.infer<typeof Ollama_Model_Details>;

// TODO @many assert type: ModelResponse
export const Ollama_List_Response_Item = z.looseObject({
	details: Ollama_Model_Details.optional(),
	digest: z.string(),
	// TODO @many Ollama bug - is this ever returned? marked as required in the types but not showing up - and is the type a string like elsewhere?
	// expires_at: Date;
	model: z.string(),
	modified_at: z.string(), // TODO @many Ollama bug - says Date but is a string
	name: z.string(),
	size: z.number(),
	// TODO @many Ollama bug - is this ever returned? marked as required in the types but not showing up
	// size_vram: number;
});
export type Ollama_List_Response_Item = z.infer<typeof Ollama_List_Response_Item>;

// TODO @many assert type: ListResponse
export const Ollama_List_Response = z.looseObject({
	models: z.array(Ollama_List_Response_Item),
});
export type Ollama_List_Response = z.infer<typeof Ollama_List_Response>;

// TODO @many assert type: ShowResponse
export const Ollama_Show_Response = z.looseObject({
	capabilities: z.array(z.string()).optional(),
	details: Ollama_Model_Details.optional(),
	license: z.string().optional(),
	model_info: z.any().optional(), // Map<string, any> in the API
	modelfile: z.string().optional(),
	modified_at: z.string().optional(), // TODO @many Ollama bug - says Date but is a string
	template: z.string().optional(),
	tensors: z.array(z.any()).optional(), // TODO maybe turn? is removed atm in `ollama.svelte.ts`
});
export type Ollama_Show_Response = z.infer<typeof Ollama_Show_Response>;

// TODO @many assert type: ModelResponse -- Ollama is bugged, PS response item has additional fields compared to list
export const Ollama_Ps_Response_Item = z.looseObject({
	details: Ollama_Model_Details.optional(),
	digest: z.string(),
	expires_at: z.string(), // ISO date string for when the model will be unloaded
	model: z.string(),
	name: z.string(),
	size: z.number(),
	size_vram: z.number(), // Amount of VRAM used by the model
});
export type Ollama_Ps_Response_Item = z.infer<typeof Ollama_Ps_Response_Item>;

// TODO @many assert type: ListResponse (bugged in Ollama, is different for list vs ps)
export const Ollama_Ps_Response = z.looseObject({
	models: z.array(Ollama_Ps_Response_Item),
});
export type Ollama_Ps_Response = z.infer<typeof Ollama_Ps_Response>;

// Request schemas
export const Ollama_List_Request = z.void().optional();
export type Ollama_List_Request = z.infer<typeof Ollama_List_Request>;

export const Ollama_Ps_Request = z.void().optional();
export type Ollama_Ps_Request = z.infer<typeof Ollama_Ps_Request>;

export const Ollama_Show_Request = z.looseObject({
	model: z.string(),
	system: z.string().optional(),
	template: z.string().optional(),
	options: z.any().optional(), // Partial<Options>
});
export type Ollama_Show_Request = z.infer<typeof Ollama_Show_Request>;

export const Ollama_Pull_Request = z.looseObject({
	model: z.string(),
	insecure: z.boolean().optional(),
	stream: z.boolean().optional(),
});
export type Ollama_Pull_Request = z.infer<typeof Ollama_Pull_Request>;

export const Ollama_Push_Request = z.looseObject({
	model: z.string(),
	insecure: z.boolean().optional(),
	stream: z.boolean().optional(),
});
export type Ollama_Push_Request = z.infer<typeof Ollama_Push_Request>;

export const Ollama_Create_Request = z.looseObject({
	model: z.string(),
	from: z.string().optional(),
	stream: z.boolean().optional(),
	quantize: z.string().optional(),
	template: z.string().optional(),
	license: z.union([z.string(), z.array(z.string())]).optional(),
	system: z.string().optional(),
	parameters: z.record(z.string(), z.unknown()).optional(),
	messages: z.array(z.any()).optional(), // Array<Message>
	adapters: z.record(z.string(), z.string()).optional(),
});
export type Ollama_Create_Request = z.infer<typeof Ollama_Create_Request>;

export const Ollama_Delete_Request = z.looseObject({
	model: z.string(),
});
export type Ollama_Delete_Request = z.infer<typeof Ollama_Delete_Request>;

export const Ollama_Copy_Request = z.looseObject({
	source: z.string(),
	destination: z.string(),
});
export type Ollama_Copy_Request = z.infer<typeof Ollama_Copy_Request>;

/**
 * Extract parameter count from parameter size string like "7B", "13B", etc.
 */
export const extract_parameter_count = (parameter_size: string | undefined): number | undefined => {
	if (!parameter_size) return undefined;
	const match = /^(\d+(?:\.\d+)?)[BM]?$/i.exec(parameter_size);
	if (!match) return undefined;
	const value = parseFloat(match[1]!); // guaranteed by regex and !match check
	// If it ends with M, convert to billions
	if (parameter_size.toUpperCase().endsWith('M')) {
		return value / 1000;
	}
	return value;
};

export const ollama_logo = {
	label: 'the Ollama logo',
	paths: [
		{
			d: 'm 28.64064,0.03589683 c -0.93326,0.15075969 -2.053195,0.63892949 -2.842876,1.24197237 -2.390589,1.81629 -4.242785,5.6714383 -5.025299,10.4741988 -0.294335,1.816276 -0.495344,4.336156 -0.495344,6.260177 0,2.268563 0.265618,5.168822 0.646113,7.171775 0.08615,0.44514 0.129222,0.840038 0.09333,0.86873 -0.02872,0.02869 -0.380494,0.315849 -0.775347,0.631698 -1.349647,1.076838 -2.89315,2.735248 -3.955641,4.250083 -2.038847,2.893114 -3.359791,6.181128 -3.912576,9.741896 -0.215372,1.40709 -0.272803,4.249965 -0.1005,5.657056 0.380487,3.244916 1.356835,5.98731 3.029546,8.500047 l 0.545608,0.811229 -0.157935,0.265609 c -1.119934,1.880923 -2.074742,4.601767 -2.51984,7.214869 -0.351773,2.067598 -0.394848,2.620363 -0.394848,5.391448 0,2.792751 0.0359,3.345515 0.36613,5.276676 0.394848,2.311658 1.198898,4.759635 2.096274,6.389355 0.294348,0.531216 1.012251,1.636745 1.098398,1.694246 0.02871,0.01429 -0.05743,0.279896 -0.193831,0.588603 -1.033787,2.261418 -1.916805,5.269418 -2.282941,7.803703 -0.258441,1.737227 -0.294336,2.297255 -0.294336,4.127935 0,2.333091 0.12922,3.46743 0.617399,5.326802 l 0.07179,0.272701 h 3.072624 3.079814 l -0.201023,-0.38044 C 18.96336,97.31901 18.848496,93.05464 19.918166,88.797531 c 0.488179,-1.967115 1.040968,-3.410041 2.074743,-5.398709 l 0.617399,-1.20601 v -0.73944 c 0,-0.689202 -0.01436,-0.768132 -0.236904,-1.220417 -0.172306,-0.344658 -0.402031,-0.638959 -0.811241,-1.041002 -0.696366,-0.674794 -1.198891,-1.385542 -1.600922,-2.261417 -1.766037,-3.833634 -2.110638,-9.526527 -0.868661,-14.379615 0.516894,-2.024501 1.371197,-3.826375 2.268573,-4.809875 0.61022,-0.674911 0.926091,-1.428639 0.926091,-2.211177 0,-0.811228 -0.287156,-1.478879 -0.93327,-2.175222 -1.852195,-1.981404 -2.993655,-4.393661 -3.402864,-7.200582 -0.581504,-3.998761 0.473819,-8.35647 2.871612,-11.809493 2.347553,-3.388613 5.642699,-5.563836 9.325611,-6.145293 0.825518,-0.136435 2.369043,-0.114887 3.230513,0.0431 0.94052,0.165126 1.529122,0.11477 2.132244,-0.172388 0.746584,-0.351684 1.119934,-0.78968 1.557813,-1.794729 0.387638,-0.897306 0.689199,-1.385542 1.500429,-2.397734 0.976356,-1.213272 1.916758,-2.038906 3.424331,-3.036811 1.723057,-1.127078 3.682913,-1.945451 5.635625,-2.34035 0.71063,-0.143578 1.040885,-0.165127 2.369042,-0.165127 1.328159,0 1.658412,0.02155 2.369043,0.165127 2.864422,0.581574 5.707414,2.060455 7.975974,4.156628 0.48812,0.452284 1.658295,1.90247 2.031646,2.505594 0.143578,0.236799 0.394899,0.739439 0.552764,1.112673 0.43788,1.005049 0.81123,1.443045 1.557814,1.794729 0.581573,0.280013 1.191723,0.337514 2.096291,0.186676 1.428638,-0.24406 2.527025,-0.222512 3.926972,0.06465 4.766895,0.961951 8.916378,4.888924 10.754204,10.151198 1.60091,4.616055 1.148626,9.447594 -1.234819,13.137535 -0.402043,0.62467 -0.804086,1.127194 -1.385543,1.744605 -1.25637,1.342445 -1.25637,3.008001 -0.0071,4.386399 2.053194,2.247013 3.338256,7.774895 2.950501,12.649414 -0.258349,3.216227 -1.083983,6.095053 -2.218322,7.724656 -0.200962,0.287156 -0.617293,0.775276 -0.933258,1.076837 -0.409186,0.402043 -0.638842,0.696344 -0.811229,1.041002 -0.222512,0.452283 -0.236917,0.531215 -0.236917,1.220415 v 0.739441 l 0.61741,1.206011 c 1.033858,1.988666 1.586623,3.431592 2.074742,5.398709 1.055406,4.199725 0.962068,8.3779 -0.244058,10.754203 -0.100479,0.200964 -0.186676,0.387616 -0.186676,0.409174 0,0.02151 1.371255,0.03581 3.051097,0.03581 h 3.043955 l 0.07893,-0.308691 c 0.0431,-0.16501 0.114887,-0.416331 0.150721,-0.559909 0.07905,-0.315848 0.236917,-1.249107 0.366208,-2.146531 0.12203,-0.904566 0.12203,-4.235677 0,-5.240725 -0.459427,-3.64696 -1.227676,-6.540075 -2.483929,-9.275324 -0.136434,-0.308706 -0.222628,-0.574314 -0.193936,-0.588601 0.03596,-0.02155 0.236917,-0.308706 0.452284,-0.631816 1.565074,-2.369042 2.527025,-5.34835 3.015262,-9.282468 0.129173,-1.084097 0.129173,-5.743249 0,-6.784251 -0.344658,-2.684891 -0.760989,-4.50843 -1.450188,-6.353399 -0.287158,-0.768132 -1.048145,-2.390592 -1.371138,-2.914664 l -0.157983,-0.265609 0.545621,-0.811229 c 1.672699,-2.512737 2.649055,-5.25513 3.029549,-8.500046 0.17227,-1.407091 0.114887,-4.249967 -0.100478,-5.657057 -0.560025,-3.568028 -1.873779,-6.841637 -3.912567,-9.741896 -1.06255,-1.514833 -2.606076,-3.173244 -3.955665,-4.250082 -0.394899,-0.315849 -0.746701,-0.603005 -0.775394,-0.631698 -0.03584,-0.02869 0.0072,-0.423591 0.09334,-0.86873 0.86873,-4.529978 0.839922,-10.179774 -0.07179,-14.594937 C 78.211992,6.7411284 76.776209,3.6828521 74.923978,1.916815 73.445098,0.50972185 71.937525,-0.09331726 70.128391,0.02154733 65.978909,0.26563406 62.63351,5.0396902 61.312495,12.563307 c -0.215367,1.213271 -0.401926,2.634768 -0.401926,3.022406 0,0.150723 -0.02881,0.272752 -0.06465,0.272752 -0.03596,0 -0.315849,-0.143579 -0.617411,-0.322992 -3.20182,-1.895328 -6.762702,-2.90752 -10.230131,-2.90752 -3.467429,0 -7.028312,1.012191 -10.230132,2.90752 -0.301562,0.179414 -0.581457,0.322992 -0.61741,0.322992 -0.03584,0 -0.06465,-0.122029 -0.06465,-0.272752 0,-0.402042 -0.193819,-1.866517 -0.401926,-3.022405 C 37.485228,5.8078345 34.735693,1.3353005 31.081588,0.20818971 30.579064,0.05743001 29.150424,-0.04307254 28.64064,0.03589683 Z m 1.220532,5.84373997 c 1.033741,0.8184078 2.182367,3.1587706 2.842875,5.7791292 0.122029,0.473797 0.251203,1.019416 0.287157,1.220381 0.02869,0.193935 0.107629,0.631814 0.17227,0.969212 0.280012,1.521976 0.409187,3.165982 0.423591,5.168934 l 0.0071,1.974259 -0.495379,0.73218 -0.495263,0.739441 h -1.155888 c -1.34959,0 -2.692152,0.172388 -3.977213,0.516927 -0.459428,0.114888 -0.904568,0.229773 -0.990644,0.251321 -0.136434,0.02869 -0.157983,-0.01441 -0.236917,-0.603122 -0.423591,-3.194676 -0.402041,-6.733894 0.06465,-9.677365 0.516812,-3.2807698 1.722939,-6.2528882 2.900258,-7.1287279 0.280013,-0.2082004 0.330254,-0.2010215 0.653364,0.057438 z M 70.795986,5.829374 c 0.710748,0.5240722 1.493285,1.9168055 2.074742,3.697201 1.170175,3.560796 1.500429,8.449719 0.883019,13.101725 -0.07893,0.588719 -0.100478,0.631815 -0.236917,0.603122 -0.08608,-0.02155 -0.531215,-0.136433 -0.990643,-0.25132 -1.285061,-0.34454 -2.627624,-0.516928 -3.977214,-0.516928 h -1.155888 l -0.495262,-0.73944 -0.495381,-0.73218 0.0071,-1.97426 c 0.0144,-2.785489 0.272869,-4.960711 0.890162,-7.380065 0.653363,-2.5988207 1.809134,-4.9391832 2.835731,-5.7575911 0.323111,-0.2584533 0.37335,-0.2656324 0.660507,-0.050263 z',
		},
		{
			d: 'm 48.885535,41.961366 c -1.55793,0.15084 -1.981404,0.208225 -2.728105,0.359063 -1.213273,0.251204 -2.83573,0.81123 -3.962809,1.363995 -3.919713,1.916759 -6.619008,5.111436 -7.444642,8.808636 -0.165127,0.732296 -0.186675,0.976355 -0.186675,2.211177 0,1.220415 0.02155,1.486023 0.179532,2.182367 1.098385,4.831539 5.549313,8.399566 11.306968,9.052812 1.249108,0.136434 6.647818,0.136434 7.896926,0 4.623316,-0.524072 8.600528,-3.029549 10.388114,-6.547335 0.473715,-0.940403 0.703487,-1.55067 0.918854,-2.505477 0.157984,-0.696344 0.179531,-0.961952 0.179531,-2.182367 0,-1.234822 -0.02155,-1.478881 -0.186674,-2.211177 C 64.047569,47.123161 58.835654,42.894743 52.446301,42.090657 51.613523,41.99018 49.431156,41.903982 48.885535,41.961366 Z m 2.684891,3.905425 c 2.132243,0.229772 4.278774,0.990761 6.001715,2.139388 0.926115,0.61741 2.232725,1.909615 2.792633,2.756797 0.6892,1.048028 1.083982,2.117722 1.263514,3.417187 0.07893,0.595862 0.03595,1.048146 -0.179532,2.010097 -0.337397,1.435783 -1.385543,2.936212 -2.799778,3.984358 -0.660507,0.480975 -2.031645,1.177436 -2.871566,1.450187 -1.593766,0.509668 -2.634768,0.603005 -6.353517,0.574313 -2.426426,-0.02155 -2.857279,-0.0431 -3.553622,-0.17227 -2.376185,-0.44514 -4.257109,-1.392803 -5.621104,-2.83573 -1.105646,-1.163032 -1.60817,-2.225465 -1.880923,-3.94126 -0.122029,-0.796943 0.107629,-2.117839 0.574314,-3.230631 0.56717,-1.35685 2.031646,-3.043836 3.481833,-4.013048 1.679843,-1.119935 3.891019,-1.916759 5.922665,-2.132127 0.782536,-0.08619 2.44083,-0.08619 3.223368,-0.0072 z',
		},
		{
			d: 'm 47.25605,51.107635 c -0.545621,0.294302 -0.926116,1.040884 -0.811229,1.593649 0.129174,0.595863 0.653246,1.198984 1.471618,1.694365 0.437997,0.265608 0.46669,0.301444 0.488238,0.567051 0.01429,0.157986 -0.0431,0.610268 -0.122031,1.012311 -0.08619,0.39478 -0.150838,0.811228 -0.150838,0.926116 0.0072,0.308707 0.294417,0.81123 0.595862,1.055289 0.265724,0.215367 0.315965,0.222509 1.06255,0.244058 0.682054,0.02155 0.825633,0.0071 1.098385,-0.12203 0.703603,-0.344658 0.883018,-0.976357 0.624554,-2.189628 -0.215367,-1.012191 -0.172271,-1.170175 0.366206,-1.478881 0.567053,-0.330253 1.170176,-0.91171 1.34959,-1.306609 0.344658,-0.753728 0.02869,-1.608054 -0.732296,-2.002953 -0.186558,-0.09333 -0.41633,-0.136317 -0.753728,-0.136317 -0.524073,0 -0.86147,0.12203 -1.478881,0.516811 l -0.351801,0.222629 -0.222511,-0.136434 c -0.911711,-0.538477 -1.076837,-0.603006 -1.62972,-0.595862 -0.394783,0 -0.610149,0.03584 -0.803968,0.136435 z',
		},
		{
			d: 'm 29.825219,42.772714 c -1.270657,0.402043 -2.218321,1.335301 -2.706439,2.66346 -0.236916,0.631815 -0.351803,1.629721 -0.251321,2.16808 0.236916,1.285061 1.292205,2.455235 2.491189,2.778346 1.507573,0.394783 2.634651,0.136317 3.632556,-0.854327 0.581457,-0.567169 0.897423,-1.06255 1.213271,-1.866633 0.229655,-0.567054 0.24406,-0.667536 0.24406,-1.471621 l 0.0071,-0.861468 -0.301444,-0.617413 c -0.481093,-0.976353 -1.349708,-1.701507 -2.354755,-1.967115 -0.567169,-0.143577 -1.478881,-0.136317 -1.974261,0.02869 z',
		},
		{
			d: 'm 68.168479,42.751283 c -0.983501,0.265608 -1.859374,0.997788 -2.326062,1.959855 l -0.301445,0.617413 0.0071,0.861468 c 0,0.804085 0.01441,0.904567 0.24406,1.471621 0.315967,0.804086 0.631815,1.299464 1.213272,1.866633 0.997904,0.990644 2.124982,1.24911 3.632673,0.854327 0.868613,-0.229772 1.737227,-0.96207 2.153675,-1.816394 0.358945,-0.725035 0.445022,-1.249108 0.330253,-2.074741 -0.265609,-1.888068 -1.371255,-3.259205 -3.015263,-3.740182 -0.480975,-0.143577 -1.414233,-0.143577 -1.938306,0 z',
		},
	],
} satisfies Svg_Data;
