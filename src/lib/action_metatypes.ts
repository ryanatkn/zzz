// generated by src/lib/action_metatypes.gen.ts - DO NOT EDIT OR RISK LOST DATA

import {z} from 'zod';
import type {Result} from '@ryanatkn/belt/result.js';

import type {Action_Inputs, Action_Outputs} from '$lib/action_collections.js';
import type {Jsonrpc_Error_Json} from '$lib/jsonrpc.js';

/**
 * All action method names. Request/response actions have two types per method.
 */
export const Action_Method = z.enum([
	'completion_create',
	'completion_progress',
	'directory_create',
	'diskfile_delete',
	'diskfile_update',
	'filer_change',
	'ollama_copy',
	'ollama_create',
	'ollama_delete',
	'ollama_list',
	'ollama_progress',
	'ollama_ps',
	'ollama_pull',
	'ollama_show',
	'ollama_unload',
	'ping',
	'provider_load_status',
	'provider_update_api_key',
	'session_load',
	'toggle_main_menu',
]);
export type Action_Method = z.infer<typeof Action_Method>;

/**
 * Names of all request_response actions.
 */
export const Request_Response_Action_Method = z.enum([
	'completion_create',
	'directory_create',
	'diskfile_delete',
	'diskfile_update',
	'ollama_copy',
	'ollama_create',
	'ollama_delete',
	'ollama_list',
	'ollama_ps',
	'ollama_pull',
	'ollama_show',
	'ollama_unload',
	'ping',
	'provider_load_status',
	'provider_update_api_key',
	'session_load',
]);
export type Request_Response_Action_Method = z.infer<typeof Request_Response_Action_Method>;

/**
 * Names of all remote_notification actions.
 */
export const Remote_Notification_Action_Method = z.enum([
	'completion_progress',
	'filer_change',
	'ollama_progress',
]);
export type Remote_Notification_Action_Method = z.infer<typeof Remote_Notification_Action_Method>;

/**
 * Names of all local_call actions.
 */
export const Local_Call_Action_Method = z.enum(['toggle_main_menu']);
export type Local_Call_Action_Method = z.infer<typeof Local_Call_Action_Method>;

/**
 * Names of all actions that may be handled on the client.
 */
export const Frontend_Action_Method = z.enum([
	'completion_create',
	'completion_progress',
	'directory_create',
	'diskfile_delete',
	'diskfile_update',
	'filer_change',
	'ollama_copy',
	'ollama_create',
	'ollama_delete',
	'ollama_list',
	'ollama_progress',
	'ollama_ps',
	'ollama_pull',
	'ollama_show',
	'ollama_unload',
	'ping',
	'provider_load_status',
	'provider_update_api_key',
	'session_load',
	'toggle_main_menu',
]);
export type Frontend_Action_Method = z.infer<typeof Frontend_Action_Method>;

/**
 * Names of all actions that may be handled on the server.
 */
export const Backend_Action_Method = z.enum([
	'completion_create',
	'completion_progress',
	'directory_create',
	'diskfile_delete',
	'diskfile_update',
	'filer_change',
	'ollama_copy',
	'ollama_create',
	'ollama_delete',
	'ollama_list',
	'ollama_progress',
	'ollama_ps',
	'ollama_pull',
	'ollama_show',
	'ollama_unload',
	'ping',
	'provider_load_status',
	'provider_update_api_key',
	'session_load',
]);
export type Backend_Action_Method = z.infer<typeof Backend_Action_Method>;

/**
 * Interface for action dispatch functions.
 * All async methods return Result types for type-safe error handling.
 * Sync methods (like toggle_main_menu) return values directly.
 */
export interface Actions_Api {
	completion_create: (
		input: Action_Inputs['completion_create'],
	) => Promise<Result<{value: Action_Outputs['completion_create']}, {error: Jsonrpc_Error_Json}>>;
	completion_progress: (
		input: Action_Inputs['completion_progress'],
	) => Promise<Result<{value: Action_Outputs['completion_progress']}, {error: Jsonrpc_Error_Json}>>;
	directory_create: (
		input: Action_Inputs['directory_create'],
	) => Promise<Result<{value: Action_Outputs['directory_create']}, {error: Jsonrpc_Error_Json}>>;
	diskfile_delete: (
		input: Action_Inputs['diskfile_delete'],
	) => Promise<Result<{value: Action_Outputs['diskfile_delete']}, {error: Jsonrpc_Error_Json}>>;
	diskfile_update: (
		input: Action_Inputs['diskfile_update'],
	) => Promise<Result<{value: Action_Outputs['diskfile_update']}, {error: Jsonrpc_Error_Json}>>;
	filer_change: (
		input: Action_Inputs['filer_change'],
	) => Promise<Result<{value: Action_Outputs['filer_change']}, {error: Jsonrpc_Error_Json}>>;
	ollama_copy: (
		input: Action_Inputs['ollama_copy'],
	) => Promise<Result<{value: Action_Outputs['ollama_copy']}, {error: Jsonrpc_Error_Json}>>;
	ollama_create: (
		input: Action_Inputs['ollama_create'],
	) => Promise<Result<{value: Action_Outputs['ollama_create']}, {error: Jsonrpc_Error_Json}>>;
	ollama_delete: (
		input: Action_Inputs['ollama_delete'],
	) => Promise<Result<{value: Action_Outputs['ollama_delete']}, {error: Jsonrpc_Error_Json}>>;
	ollama_list: (
		input?: void,
	) => Promise<Result<{value: Action_Outputs['ollama_list']}, {error: Jsonrpc_Error_Json}>>;
	ollama_progress: (
		input: Action_Inputs['ollama_progress'],
	) => Promise<Result<{value: Action_Outputs['ollama_progress']}, {error: Jsonrpc_Error_Json}>>;
	ollama_ps: (
		input?: void,
	) => Promise<Result<{value: Action_Outputs['ollama_ps']}, {error: Jsonrpc_Error_Json}>>;
	ollama_pull: (
		input: Action_Inputs['ollama_pull'],
	) => Promise<Result<{value: Action_Outputs['ollama_pull']}, {error: Jsonrpc_Error_Json}>>;
	ollama_show: (
		input: Action_Inputs['ollama_show'],
	) => Promise<Result<{value: Action_Outputs['ollama_show']}, {error: Jsonrpc_Error_Json}>>;
	ollama_unload: (
		input: Action_Inputs['ollama_unload'],
	) => Promise<Result<{value: Action_Outputs['ollama_unload']}, {error: Jsonrpc_Error_Json}>>;
	ping: (
		input?: void,
	) => Promise<Result<{value: Action_Outputs['ping']}, {error: Jsonrpc_Error_Json}>>;
	provider_load_status: (
		input: Action_Inputs['provider_load_status'],
	) => Promise<
		Result<{value: Action_Outputs['provider_load_status']}, {error: Jsonrpc_Error_Json}>
	>;
	provider_update_api_key: (
		input: Action_Inputs['provider_update_api_key'],
	) => Promise<
		Result<{value: Action_Outputs['provider_update_api_key']}, {error: Jsonrpc_Error_Json}>
	>;
	session_load: (
		input?: void,
	) => Promise<Result<{value: Action_Outputs['session_load']}, {error: Jsonrpc_Error_Json}>>;
	toggle_main_menu: (
		input?: Action_Inputs['toggle_main_menu'],
	) => Action_Outputs['toggle_main_menu'];
}

// generated by src/lib/action_metatypes.gen.ts - DO NOT EDIT OR RISK LOST DATA
