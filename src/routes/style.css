/* global stylesheet imported by `src/routes/+layout.svelte */

/* TODO probably upstream serif headings to Moss */
.heading,
h1,
h2,
h3,
h4,
h5,
h6 {
	font-family: 'DM Serif Display', Georgia, serif; /* copying svelte's homework and taste */
}

textarea {
	scrollbar-width: thin; /* TODO maybe upstream? */
	border-radius: var(--radius_xs2);
}

/* TODO upstream */
/* This is needed in places where glyphs may appear with non-sans fonts like headings. */
.glyph {
	font-family: var(--font_sans);
	font-weight: 400;
}

.click_effect_scale:hover {
	transform: scale(1.08);
}
.click_effect_scale:active {
	transform: scale(1.14);
}

/* TODO refactor with `Glyph`*/
.icon_xs {
	display: flex;
	align-items: center;
	justify-content: center;
	width: 2ch;
	margin-right: var(--space_xs);
	text-align: center;
}

/* TODO upstream most of this */
.compact {
	--size: var(--size_sm);
	--input_height: 2.6rem;
	--input_padding_x: var(--space_sm);
	--min_height: 2.6rem;
	--border_radius: var(--radius_xs2);
}
button.compact {
	font-size: var(--size); /* ideally the base button would use `--size` I think */
}

input[type='checkbox'].compact {
	height: var(--input_height);
	min-height: var(--input_height);
}
input[type='checkbox'].compact:not(:hover)::before {
	color: var(--text_color_3);
}

/* TODO upstream */
input[type='checkbox'].plain {
	height: var(--input_height);
	min-height: var(--input_height);
}
input[type='checkbox'].plain:not(:hover) {
	--input_fill: transparent;
}

/* TOOD upstream */
input.input_xs {
	--input_width_min: 80px;
	max-width: 80px;
}

/* TODO upstream? something like it? */
.dormant {
	opacity: 0.6;
}

/* TODO upstream probably */
.scrolled {
	box-shadow: var(
		--box_shadow,
		var(--shadow_sm) color-mix(in hsl, var(--shadow_color) var(--shadow_alpha_2), transparent) inset
	);
}

/* TODO @many upstream to Fuz? (not Moss right?) */
.reorderable_item {
	--reorderable_outline_style: dashed;
	outline: var(--outline_width) var(--reorderable_outline_style) var(--outline_color);
}
.reorderable_item:hover {
	outline-width: var(--border_width_1);
	outline-color: var(--border_color_3);
}
.reorderable_item:active {
	outline-width: var(--border_width_1);
	outline-color: var(--outline_color);
}
.reorderable_item.dragging {
	opacity: var(--fade_3);
	outline-width: var(--border_width_2);
}

/* TODO @many upstream to Fuz? (not Moss right?) */
[draggable='true'] {
	cursor: grab;
}
[draggable='true']:active {
	cursor: grabbing;
}
/* Drag indicator base style */
.drag_over {
	--drag_indicator_size: 4px;
	--drag_indicator_color: var(--color_a_5);
	--drag_indicator_z_index: 100;
	position: relative;
}
/* Common styles for all indicators */
.drag_over_top::before,
.drag_over_bottom::after,
.drag_over_left::before,
.drag_over_right::after {
	content: '';
	position: absolute;
	background-color: var(--drag_indicator_color);
	z-index: var(--drag_indicator_z_index);
	pointer-events: none;
}
/* Top drag indicator */
.drag_over_top::before {
	top: calc(-1 * var(--drag_indicator_size) / 2);
	left: 0;
	right: 0;
	height: var(--drag_indicator_size);
}
/* Bottom drag indicator */
.drag_over_bottom::after {
	bottom: calc(-1 * var(--drag_indicator_size) / 2);
	left: 0;
	right: 0;
	height: var(--drag_indicator_size);
}
/* Left drag indicator */
.drag_over_left::before {
	left: calc(-1 * var(--drag_indicator_size) / 2);
	top: 0;
	bottom: 0;
	width: var(--drag_indicator_size);
}
/* Right drag indicator */
.drag_over_right::after {
	right: calc(-1 * var(--drag_indicator_size) / 2);
	top: 0;
	bottom: 0;
	width: var(--drag_indicator_size);
}

/* TODO ? */
/* .drag_over_invalid::before {
	background-color: var(--color_c_5);
} */

/* Layout classes */
.column_fixed {
	width: var(--column_width, var(--width_sm));
	min-width: var(--column_width, var(--width_sm));
	height: 100%;
	overflow: auto;
	scrollbar-width: thin;
}
.column_fluid {
	flex: 1;
	height: 100%;
	min-width: var(--column_width, var(--width_sm));
	overflow: auto;
	scrollbar-width: thin;
}

.column_bg_1 {
	background-color: var(--fg_1);
	min-height: 100%;
}

/* TODO upstream */
.max_height_sm {
	max-height: var(--width_sm);
	overflow: auto;
	scrollbar-width: thin;
}

/* TODO upstream */
/* Chip styles */
.chip {
	padding: var(--space_xs5) var(--space_sm);
	background-color: var(--fg_1);
	border-radius: var(--radius_xs);
	display: inline-flex;
	align-items: center;
}
.chip:not(.plain) {
	border: var(--border_width_1) solid transparent;
}
a.chip {
	font-weight: 700;
}
/* Chip color variants */
.chip.color_a {
	color: var(--color_a_5);
	background-color: color-mix(in hsl, var(--fill_a) 12%, transparent);
}
.chip.color_b {
	color: var(--color_b_5);
	background-color: color-mix(in hsl, var(--fill_b) 12%, transparent);
}
.chip.color_c {
	color: var(--color_c_5);
	background-color: color-mix(in hsl, var(--fill_c) 12%, transparent);
}
.chip.color_d {
	color: var(--color_d_5);
	background-color: color-mix(in hsl, var(--fill_d) 12%, transparent);
}
.chip.color_e {
	color: var(--color_e_5);
	background-color: color-mix(in hsl, var(--fill_e) 12%, transparent);
}
.chip.color_f {
	color: var(--color_f_5);
	background-color: color-mix(in hsl, var(--fill_f) 12%, transparent);
}
.chip.color_g {
	color: var(--color_g_5);
	background-color: color-mix(in hsl, var(--fill_g) 12%, transparent);
}
.chip.color_h {
	color: var(--color_h_5);
	background-color: color-mix(in hsl, var(--fill_h) 12%, transparent);
}
.chip.color_i {
	color: var(--color_i_5);
	background-color: color-mix(in hsl, var(--fill_i) 12%, transparent);
}
.chip.color_a:not(.plain) {
	border-color: var(--border_color_a);
}
.chip.color_b:not(.plain) {
	border-color: var(--border_color_b);
}
.chip.color_c:not(.plain) {
	border-color: var(--border_color_c);
}
.chip.color_d:not(.plain) {
	border-color: var(--border_color_d);
}
.chip.color_e:not(.plain) {
	border-color: var(--border_color_e);
}
.chip.color_f:not(.plain) {
	border-color: var(--border_color_f);
}
.chip.color_g:not(.plain) {
	border-color: var(--border_color_g);
}
.chip.color_h:not(.plain) {
	border-color: var(--border_color_h);
}
.chip.color_i:not(.plain) {
	border-color: var(--border_color_i);
}

/* TODO maybe upstream? is weird but has a consistency  */
.h_input_height {
	height: var(--input_height);
}

.icon_button {
	font-weight: 400;
}

.listitem {
	width: 100%;
	border-radius: 0;
	word-break: break-all;
	justify-content: space-between;
	padding: 0 var(--space_xs);
	box-shadow: none;
	border: var(--border_width_1) solid transparent;
	font-weight: 400;
	font-size: var(--size_sm);
}
.listitem:hover {
	--button_text_color: var(--text_color_2);
}
.listitem.selected {
	--button_text_color: var(--text_color_1);
	--button_fill: var(--fg_2);
	--button_fill_hover: var(--fg_1);
	--button_fill_active: var(--fg_2);
	--button_border_color: var(--border_color_a);
}

/* Column sections use padding instead of margin so they can transition in/out without layout jank. */
.column_section {
	padding: var(--space_sm) var(--space_sm) var(--space_xl7);
	margin-bottom: 0;
}
