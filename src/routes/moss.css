/* generated by gro_plugin_moss */

/* can be used to override the direction of a `.box` */
.row {
	display: flex;
	flex-direction: row;
	align-items: center;
}

.ml_sm {
	margin-left: var(--space_sm);
}
.mb_sm {
	margin-bottom: var(--space_sm);
}
.color_a_5 {
	color: var(--color_a_5);
}
.pt_xl2 {
	padding-top: var(--space_xl2);
}

.box {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}

.w_100 {
	width: 100%;
}
.mb_lg {
	margin-bottom: var(--space_lg);
}
.mb_xs {
	margin-bottom: var(--space_xs);
}
.block {
	display: block;
}

/* Formats content to wrap long strings and preserve displayed whitespace. */
.formatted {
	overflow: hidden;
	white-space: break-spaces;
}

/* TODO maybe this belongs with the reset, like `selected`? or does `selected` belong here? */
.plain:not(:hover) {
	--border_color: transparent;
	box-shadow: none;
	--button_fill: transparent;
}
.plain:hover,
.plain:active {
	--border_color: transparent;
}

.ml_xs2 {
	margin-left: var(--space_xs2);
}

/* like `.box` but uncentered */
.column {
	display: flex;
	flex-direction: column;
}

.mt_xs {
	margin-top: var(--space_xs);
}
.my_xs {
	margin-top: var(--space_xs);
	margin-bottom: var(--space_xs);
}
.size_sm {
	font-size: var(--size_sm);
	--size: var(--size_sm);
}
.flex_1 {
	flex: 1;
}
.flex {
	display: flex;
}
.gap_xs2 {
	gap: var(--space_xs2);
}
.mb_0 {
	margin-bottom: 0;
}

/* TODO other button variants? */
/* TODO this is slightly strange that it doesn't use --icon_size */
/* These are used as modifiers to buttons, and so they use `:where` so they cascade. */
.icon_button {
	width: var(--input_height);
	height: var(--input_height);
	min-width: var(--input_height);
	min-height: var(--input_height);
	flex-shrink: 0;
	line-height: 1;
	font-weight: 900;
	padding: 0;
}

.size_lg {
	font-size: var(--size_lg);
	--size: var(--size_lg);
}
.gap_xs {
	gap: var(--space_xs);
}
.font_mono {
	font-family: var(--font_mono);
}
.justify_content_space_between {
	justify-content: space-between;
}
.white_space_nowrap {
	white-space: nowrap;
}
.px_sm {
	padding-left: var(--space_sm);
	padding-right: var(--space_sm);
}
.ml_xl {
	margin-left: var(--space_xl);
}
.inline_block {
	display: inline-block;
}
.text_align_center {
	text-align: center;
}
.line_height_1 {
	line-height: 1;
}
.font_weight_400 {
	font-weight: 400;
	--font_weight: 400;
}
.bg_2 {
	background-color: var(--bg_2);
}
.gap_xs5 {
	gap: var(--space_xs5);
}
.radius_xs {
	border-radius: var(--radius_xs);
}
.overflow_auto {
	overflow: auto;
}
.scrollbar_width_thin {
	scrollbar-width: thin;
}
.font_sans {
	font-family: var(--font_sans);
}
.fg_1 {
	background-color: var(--fg_1);
}
.px_md {
	padding-left: var(--space_md);
	padding-right: var(--space_md);
}
.py_xs {
	padding-top: var(--space_xs);
	padding-bottom: var(--space_xs);
}
.relative {
	position: relative;
}

/* A panel is a box embedded into the page, useful for visually isolating content. */
.panel {
	border-radius: var(--radius_xs);
	background-color: var(--panel_bg, var(--fg_1));
}

.pl_sm {
	padding-left: var(--space_sm);
}
.py_xs3 {
	padding-top: var(--space_xs3);
	padding-bottom: var(--space_xs3);
}
.ellipsis {
	display: block;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}
.mr_xs2 {
	margin-right: var(--space_xs2);
}
.p_xs {
	padding: var(--space_xs);
}
.mr_xs {
	margin-right: var(--space_xs);
}
.size_xs {
	font-size: var(--size_xs);
	--size: var(--size_xs);
}
.ml_xs {
	margin-left: var(--space_xs);
}

/* A pane is a box floating over the page, like for dialogs.
			By default it's opaque, resetting the background to the initial depth. */
.pane {
	background-color: var(--pane_bg, var(--bg));
	box-shadow: var(
		--pane_shadow,
		/* TODO this is terrible, maybe add all the variables? should be culled anyway? */
			var(--shadow_bottom_md)
			color-mix(in hsl, var(--shadow_color) var(--shadow_alpha_3), transparent)
	);
	border-radius: var(--radius_xs);
}

.p_md {
	padding: var(--space_md);
}

.width_md {
	width: 100%;
	max-width: var(--width_md);
}

.mx_auto {
	margin-left: auto;
	margin-right: auto;
}
.mt_0 {
	margin-top: 0;
}
.p_lg {
	padding: var(--space_lg);
}
.mt_lg {
	margin-top: var(--space_lg);
}
.bg_c_1 {
	background-color: var(--color_c_1);
}
.gap_sm {
	gap: var(--space_sm);
}
.px_xs {
	padding-left: var(--space_xs);
	padding-right: var(--space_xs);
}
.m_0 {
	margin: 0;
}
.align_items_start {
	align-items: start;
}
.align_items_center {
	align-items: center;
}
.pr_md {
	padding-right: var(--space_md);
}
.mb_xl12 {
	margin-bottom: var(--space_xl12);
}
.flip_x {
	transform: scaleX(-1);
}
.flex_wrap {
	flex-wrap: wrap;
}
.gap_xl {
	gap: var(--space_xl);
}
.mb_md {
	margin-bottom: var(--space_md);
}

.min_width_sm {
	width: 100%;
	min-width: var(--width_sm);
}

.flex_column {
	flex-direction: column;
}

.chip {
	font-weight: 600;
	padding: var(--space_xs5) var(--space_sm); /* maybe different inside `p`? using `calc` with `--size`? */
	background-color: var(--fg_1);
	border-radius: var(--radius_xs);
}
a.chip {
	font-weight: 700;
}

.size_xl {
	font-size: var(--size_xl);
	--size: var(--size_xl);
}
.px_xl {
	padding-left: var(--space_xl);
	padding-right: var(--space_xl);
}
.justify_content_center {
	justify-content: center;
}
.pl_md {
	padding-left: var(--space_md);
}
.gap_md {
	gap: var(--space_md);
}
.justify_content_start {
	justify-content: start;
}
.ml_md {
	margin-left: var(--space_md);
}
.inline_flex {
	display: inline-flex;
}
.align_items_end {
	align-items: end;
}
.mt_sm {
	margin-top: var(--space_sm);
}
.overflow_hidden {
	overflow: hidden;
}
.bg_d_1 {
	background-color: var(--color_d_1);
}
.absolute {
	position: absolute;
}
.h_100 {
	height: 100%;
}
.px_lg {
	padding-left: var(--space_lg);
	padding-right: var(--space_lg);
}
.bg_d_2 {
	background-color: var(--color_d_2);
}
.p_sm {
	padding: var(--space_sm);
}
.justify_content_end {
	justify-content: end;
}
.font_weight_600 {
	font-weight: 600;
	--font_weight: 600;
}
.gap_xl5 {
	gap: var(--space_xl5);
}

.width_xs {
	width: 100%;
	max-width: var(--width_xs);
}

.mt_md {
	margin-top: var(--space_md);
}
.pt_md {
	padding-top: var(--space_md);
}
.mb_xl {
	margin-bottom: var(--space_xl);
}
.my_lg {
	margin-top: var(--space_lg);
	margin-bottom: var(--space_lg);
}
.color_c_5 {
	color: var(--color_c_5);
}
.fade_3 {
	opacity: var(--fade_3);
}
.pb_0 {
	padding-bottom: 0;
}
.shadow_inset_top_xs {
	box-shadow: var(--shadow_inset_top_xs)
		color-mix(in hsl, var(--shadow_color) var(--shadow_alpha, var(--shadow_alpha_1)), transparent);
}

.menu_item {
	--border_radius: 0;
	--border_color: var(--border_color_3);
	position: relative;
	z-index: 2;
	cursor: pointer;
	width: 100%;
	min-height: var(--min_height, var(--icon_size_sm));
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: var(--menu_item_padding, var(--space_xs3) var(--space_xs));
}
.menu_item.selected {
	/* TODO different patterns for border and bg? */
	--border_color: var(--color_a_5);
	background-color: var(--fg_1);
	z-index: 1;
	cursor: default;
}
.menu_item.selected.deselectable:not(:disabled) {
	cursor: pointer;
}
.menu_item:hover {
	--border_color: var(--border_color_3);
	background-color: var(--fg_0);
}
.menu_item:active,
.menu_item.selected:hover {
	--border_color: var(--border_color_3);
	background-color: var(--fg_2);
}
.menu_item.plain {
	border: none;
}
.menu_item .content {
	display: flex;
	align-items: center;
	flex: 1;
	/* allows the flex children to shrink */
	min-width: 0;
}
.menu_item .icon {
	width: var(--icon_size, var(--icon_size_md));
	margin-right: var(--space_sm);
	flex-shrink: 0;
	text-align: center;
	font-weight: 900;
}
.menu_item .title {
	margin-right: var(--space_lg);
	flex-shrink: 1;
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
	line-height: var(--line_height_lg); /* prevents the bottom of g's and others from being cut off */
}

.selectable {
	--button_fill: color-mix(in hsl, var(--fill) 8%, transparent);
	--button_fill_hover: color-mix(in hsl, var(--fill) 16%, transparent);
	--button_fill_active: color-mix(in hsl, var(--fill) 24%, transparent);
	cursor: pointer;
	background-color: var(--button_fill);
	border-color: var(--border_color_3);
	border-style: var(--border_style);
	border-width: var(--border_width);
}
.selectable:hover {
	background-color: var(--button_fill_hover);
	border-color: var(--border_color_2);
}
.selectable.selected,
.selectable:active {
	background-color: var(--button_fill_active);
	border-color: var(--color_a_5);
}
.selectable.selected {
	cursor: default;
}
.selectable.selected.deselectable:not(:disabled) {
	cursor: pointer;
}

.my_xl5 {
	margin-top: var(--space_xl5);
	margin-bottom: var(--space_xl5);
}
.mt_xl3 {
	margin-top: var(--space_xl3);
}
.py_xl9 {
	padding-top: var(--space_xl9);
	padding-bottom: var(--space_xl9);
}
.mb_xl5 {
	margin-bottom: var(--space_xl5);
}
.shadow_inset_xs {
	box-shadow: var(--shadow_inset_xs)
		color-mix(in hsl, var(--shadow_color) var(--shadow_alpha, var(--shadow_alpha_1)), transparent);
}
.shadow_inset_top_sm {
	box-shadow: var(--shadow_inset_top_sm)
		color-mix(in hsl, var(--shadow_color) var(--shadow_alpha, var(--shadow_alpha_2)), transparent);
}
.size_md {
	font-size: var(--size_md);
	--size: var(--size_md);
}
.text_color_5 {
	color: var(--text_color_5);
}
.bg {
	background-color: var(--bg);
}
.shadow_bottom_md {
	box-shadow: var(--shadow_bottom_md)
		color-mix(in hsl, var(--shadow_color) var(--shadow_alpha, var(--shadow_alpha_3)), transparent);
}
.border_color_2 {
	border-color: var(--border_color_2);
}
.white_space_pre_wrap {
	white-space: pre-wrap;
}
.border_dashed {
	border-style: dashed;
}
.border_width_1 {
	border-width: var(--border_width_1);
}
.border_color_3 {
	border-color: var(--border_color_3);
}
.bg_1 {
	background-color: var(--bg_1);
}
.radius_xs2 {
	border-radius: var(--radius_xs2);
}
.py_xl {
	padding-top: var(--space_xl);
	padding-bottom: var(--space_xl);
}
.overflow_wrap_break_word {
	overflow-wrap: break-word;
}
.text_color_4 {
	color: var(--text_color_4);
}
.display_contents {
	display: contents;
}
.text_align_left {
	text-align: left;
}
.pt_xs {
	padding-top: var(--space_xs);
}
.p_xs5 {
	padding: var(--space_xs5);
}

.chevron {
	position: relative;
	height: 8px;
}
.chevron::before {
	display: block;
	content: '';
	border: 4px solid transparent;
	border-left-color: var(--text_color_3);
}

.fixed {
	position: fixed;
}
.t_0 {
	top: 0;
}
.l_0 {
	left: 0;
}
.font_serif {
	font-family: var(--font_serif);
}
.mt_xl7 {
	margin-top: var(--space_xl7);
}
.text_color_3 {
	color: var(--text_color_3);
}
.b_0 {
	bottom: 0;
}
.mb_xl7 {
	margin-bottom: var(--space_xl7);
}
.py_sm {
	padding-top: var(--space_sm);
	padding-bottom: var(--space_sm);
}
.pr_sm {
	padding-right: var(--space_sm);
}
.inline {
	display: inline;
}

.width_sm {
	width: 100%;
	max-width: var(--width_sm);
}

.overflow_x_auto {
	overflow-x: auto;
}
.px_xs4 {
	padding-left: var(--space_xs4);
	padding-right: var(--space_xs4);
}
.radius_0 {
	border-radius: 0;
}
.radius_md {
	border-radius: var(--radius_md);
}
.border_none {
	border-style: none;
}
.ml_auto {
	margin-left: auto;
}
.mb_xs2 {
	margin-bottom: var(--space_xs2);
}
.p_xs2 {
	padding: var(--space_xs2);
}
.grid {
	display: grid;
}
.pb_md {
	padding-bottom: var(--space_md);
}
.bg_e_1 {
	background-color: var(--color_e_1);
}
.pl_0 {
	padding-left: 0;
}
.sticky {
	position: sticky;
}
.mb_xs3 {
	margin-bottom: var(--space_xs3);
}
.my_md {
	margin-top: var(--space_md);
	margin-bottom: var(--space_md);
}
.mt_xs2 {
	margin-top: var(--space_xs2);
}
.radius_lg {
	border-radius: var(--radius_lg);
}
.pr_xs3 {
	padding-right: var(--space_xs3);
}
.p_xl3 {
	padding: var(--space_xl3);
}
.mb_xl3 {
	margin-bottom: var(--space_xl3);
}
.pb_xl3 {
	padding-bottom: var(--space_xl3);
}
.mr_md {
	margin-right: var(--space_md);
}
.pl_xl {
	padding-left: var(--space_xl);
}
.mr_xl {
	margin-right: var(--space_xl);
}
.mt_xl5 {
	margin-top: var(--space_xl5);
}
.text_align_right {
	text-align: right;
}
.overflow_y_hidden {
	overflow-y: hidden;
}
.p_xs4 {
	padding: var(--space_xs4);
}

/* generated by gro_plugin_moss */
