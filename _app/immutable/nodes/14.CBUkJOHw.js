import"../chunks/DsnmJJEf.js";import{p as W,f as _,a as P,d as n,r as d,s as m,i as r,j as f,b as s,t as H,n as C,c as Z,e as S,h as ea}from"../chunks/DsYFF3e0.js";import{d as $,b as ta,s as D}from"../chunks/D6t6EFf3.js";import{i as h}from"../chunks/Nwe5dM3j.js";import{h as z,c as oa,z as ra,j as la,i as sa,u as da,A as ia,q as U}from"../chunks/dRtQjgBD.js";import{A as V}from"../chunks/Dbs6j0m1.js";import{P as na}from"../chunks/4X2iJCGk.js";import{r as Q}from"../chunks/z7712QSE.js";import{p as ma}from"../chunks/CdyEdxWZ.js";import{M as _a}from"../chunks/B4cFFwNA.js";import{M as va,P as ca}from"../chunks/CEnclk0t.js";import{f as aa}from"../chunks/ChYHAxKB.js";import{O as ua}from"../chunks/BSDwi2RM.js";var fa=_('<h1 class="mb_md"> </h1>'),ha=_("<h2><!></h2>"),ga=_('<span class="font_size_md color_c_5 ml_sm"><!> </span>'),pa=_("<!> not",1),ba=_('<div class="mb_lg"><!> downloaded</div>'),xa=_('<small class="chip font_weight_400"> </small>'),wa=_('<ul class="unstyled display_flex gap_xs"></ul>'),ya=(k,a,l)=>a.chats.add(void 0,!0).add_thread(l.model),Pa=_(`<aside class="mt_xl3 width_upto_md">⚠️ This should show model info, but the APIs for ChatGPT and Claude do not provide metadata
			like context window size, output token limit, and other details. Gemini however does. It looks
			like we'll have to maintain hardcoded metadata for models, probably extending what we can
			retrieve from each API.</aside> <section class="display_flex gap_xs"><button type="button" class="color_d"><!>&nbsp; create a new chat</button></section>`,1),ka=_('<section class="row mb_xl3"><div class="glyph_container svelte-diplg8"><!></div> <div class="pl_xl"><!> <div class="ml_sm mb_md"><!> <!></div> <!> <!></div></section> <!>',1);function Ma(k,a){W(a,!0);const l=aa.get();ta(async()=>{if(a.model.provider_name==="ollama"){if(!l.lookup_provider_status("ollama")?.available)return;a.model.needs_ollama_details&&await l.api.ollama_show({model:a.model.name})}});const M=f(()=>ma.url.pathname===Q(`/models/${a.model.name}`));{let b=f(()=>({class:"panel p_lg",...a.attrs}));va(k,{tag:"div",get attrs(){return r(b)},get model(){return a.model},children:(T,R)=>{var Y=ka(),A=P(Y),G=n(A),L=n(G);z(L,{get glyph(){return oa},size:"var(--icon_size_xl)"}),d(G);var O=m(G,2),E=n(O);{var q=e=>{var t=fa(),o=n(t,!0);d(t),H(()=>D(o,a.model.name)),s(e,t)},g=e=>{var t=ha(),o=n(t);_a(o,{get model(){return a.model}}),d(t),s(e,t)};h(E,e=>{r(M)?e(q):e(g,!1)})}var x=m(E,2),I=n(x);ca(I,{get provider(){return a.model.provider},icon:"svg",class:"font_size_lg"});var X=m(I,2);{var B=e=>{var t=ga(),o=n(t);z(o,{get glyph(){return ra}});var i=m(o);d(t),H(()=>D(i,` ${(a.model.provider.status&&!a.model.provider.status.available?a.model.provider.status.error:"unavailable")??""}`)),s(e,t)};h(X,e=>{a.model.provider&&!a.model.provider.available&&e(B)})}d(x);var u=m(x,2);{var w=e=>{var t=ba(),o=n(t);{var i=c=>{z(c,{get glyph(){return da}})},v=c=>{var j=pa(),N=P(j);z(N,{get glyph(){return ia}}),C(),s(c,j)};h(o,c=>{a.model.downloaded?c(i):c(v,!1)})}C(),d(t),s(e,t)};h(u,e=>{a.model.downloaded!==void 0&&e(w)})}var K=m(u,2);{var y=e=>{var t=wa();la(t,20,()=>a.model.tags,o=>o,(o,i)=>{var v=xa(),c=n(v,!0);d(v),H(()=>D(c,i)),s(o,v)}),d(t),s(e,t)};h(K,e=>{a.model.tags.length&&e(y)})}d(O),d(A);var F=m(A,2);{var p=e=>{ua(e,{get model(){return a.model},onshow:()=>l.api.ollama_show({model:a.model.name}),ondelete:async o=>{await l.ollama.delete(o.name)},header:o=>{},$$slots:{header:!0}})},J=e=>{var t=Pa(),o=m(P(t),2),i=n(o);i.__click=[ya,l,a];var v=n(i);z(v,{get glyph(){return sa}}),C(),d(i),d(o),s(e,t)};h(F,e=>{a.model.provider_name==="ollama"?e(p):e(J,!1)})}s(T,Y)},$$slots:{default:!0}})}Z()}$(["click"]);var Aa=(k,a,l)=>a.models.add({name:r(l),provider_name:"ollama"}),Ga=_(' <button type="button" class="inline color_f">create it</button> or see the <a>models</a> or <a>providers</a>',1),La=_('<div class="p_sm"><!></div>');function Xa(k,a){W(a,!0);const l=aa.get(),M=f(()=>a.params.slug),b=f(()=>l.models.find_by_name(r(M))),T=f(()=>l.ollama),R=f(()=>r(T).list_status),Y=f(()=>!r(b)&&(r(R)==="initial"||r(R)==="pending")),A=f(()=>!r(b)&&r(R)==="failure"),G=f(()=>l.ollama.list_error);var L=La(),O=n(L);{var E=g=>{na(g,{})},q=g=>{var x=S(),I=P(x);{var X=u=>{V(u,{status:"error",children:(w,K)=>{C();var y=ea();H(()=>D(y,`error loading models: ${r(G)??""}`)),s(w,y)},$$slots:{default:!0}})},B=u=>{var w=S(),K=P(w);{var y=p=>{Ma(p,{get model(){return r(b)}})},F=p=>{V(p,{status:"error",children:(J,e)=>{C();var t=Ga(),o=P(t),i=m(o);i.__click=[Aa,l,M];var v=m(i,2),c=m(v,2);H((j,N)=>{D(o,`no model found with name "${r(M)??""}", maybe `),U(v,"href",j),U(c,"href",N)},[()=>Q("/models"),()=>Q("/providers")]),s(J,t)},$$slots:{default:!0}})};h(K,p=>{r(b)?p(y):p(F,!1)},!0)}s(u,w)};h(I,u=>{r(A)?u(X):u(B,!1)},!0)}s(g,x)};h(O,g=>{r(Y)?g(E):g(q,!1)})}d(L),s(k,L),Z()}$(["click"]);export{Xa as component};
